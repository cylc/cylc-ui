/**
 * Copyright (C) NIWA & British Crown (Met Office) & Contributors.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

@keyframes c-task-progress-animation {
  from {
    /* 0% progress */
    stroke-dashoffset: 157;

  }
  to {
    /* 100% progress */
    stroke-dashoffset: 0;
  }
}

.c-task {
  $foreground: rgb(90,90,90);
  $background: rgb(255,255,255);

  @mixin disk() {
    #outline {
      stroke: $foreground;
      fill: $foreground;
    }
  }

  @mixin outline() {
    #outline {
      stroke: $foreground;
    }
  }

  @mixin dot() {
    #dot {
      fill: $foreground;
    }
  }

  @mixin hub() {
    #hub {
      fill: $foreground;
    }
  }

  @mixin progress() {
    #progress {
      fill: transparent;
      stroke: $foreground;
      transform-origin: 50% 50%;
      transform: rotate(-90deg);
      opacity: 0.4;
      /* 0% progress */
      stroke-dashoffset: 157;
    }
  }

  @mixin cross($colour) {
    #cross rect {
      fill: $colour;
    }
  }

  @mixin held() {
    #held {
      circle {
        stroke: $foreground;
        fill: $background;
        transform: translate(-68%, -68%);
      }
      rect {
        fill: $foreground;
        transform: translate(-68%, -68%);
      }
    }
  }

  @mixin queued() {
    #queued {
      rect {
        fill: $foreground;
        stroke: $foreground;
        transform: translate(-65%, -65%);
      }
    }
  }

  @mixin runahead() {
    #runahead {
      circle {
        fill: $foreground;
        stroke: $foreground;
        transform: translate(-65%, -65%);
      }
    }
  }

  @mixin warning() {
    #warning {
      circle {
        stroke: $background;
        fill: $foreground;
      }
      rect {
        fill: $background;
      }
    }
  }

  @mixin clockface() {
    #clockface {
      circle, rect {
        fill: $foreground
      }
    }
  }

  @mixin unknown() {
    #question-mark {
      fill: $foreground;
    }
  }

  svg.task {
    /* scale the icon to the font-size */
    width: 1em;
    height: 1em;
    overflow: visible;
    vertical-align: middle;

    circle, rect {
      /* if no task status display nothing */
      fill: transparent;
      stroke: transparent;
    }

    /* isHeld */
    &.held {
      @include held();
    }

    /* isQueued */
    &.queued {
      @include queued();
    }

    /* isRunahead */
    &.runahead {
      @include runahead();
    }

    /* status */
    &.waiting {
      @include outline();
    }

    &.expired {
      @include outline();
      @include warning();
      @include clockface();
    }

    &.preparing {
      @include outline();
      @include dot();
    }

    &.submitted {
      @include outline();
      @include hub();
    }

    &.running {
      @include outline();
      @include hub();
      @include progress();
    }

    &.succeeded {
      @include disk();
    }

    &.failed {
      @include disk();
      @include outline();
      @include cross($background);
    }

    &.submit-failed {
      @include outline();
      @include cross($foreground);
    }

    &.unknown {
      @include outline();
      @include unknown();
    }
  }
}
